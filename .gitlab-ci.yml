default:
  tags:
    - docker

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

variables:
  HTTP_PROXY: "http://172.20.72.11:8888"
  HTTPS_PROXY: "http://172.20.72.11:8888"
  NO_PROXY: localhost,127.0.0.1
  IMAGE_NAME: "registry.esss.lu.se/ecdc/ess-dmsc/forwarder"

stages:
  - checks
  - test
  - integration
  - publish

black:
  image: python:3.9-slim
  stage: checks
  script:
    - pip install -r requirements-dev.txt --no-cache-dir
    - python -m black --check .

flake8:
  image: python:3.9-slim
  stage: checks
  script:
    - pip install -r requirements-dev.txt --no-cache-dir
    - python -m flake8

mypy:
  image: python:3.9-slim
  stage: checks
  script:
    - pip install -r requirements-dev.txt --no-cache-dir
    - python -m mypy .

unit-tests:
  image: python:3.9-slim
  stage: test
  script:
    - pip install -r requirements-dev.txt --no-cache-dir
    - python -m tox -- --cov=forwarder --cov-report=term --cov-report=xml --junitxml=test-output.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - test-output.xml
      - coverage.xml
    reports:
      junit: test-output.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

integration-tests:
  image: docker:28.2
  stage: integration
  script:
    - cd integration_tests
    - docker compose build
    - docker compose up -d
    - docker compose --profile manual up --abort-on-container-exit forwarder-tests
  after_script:
    - cd integration_tests
    - docker cp forwarder-tests:/shared_source/TestOutput.xml ./TestOutput.xml
    - docker compose down
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  artifacts:
    when: always
    paths:
      - integration_tests/
    reports:
      junit: integration_tests/TestOutput.xml

publish-docker-image:
  stage: publish
  image: docker:cli
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - |
      docker build -t "$IMAGE_NAME:$DOCKER_IMAGE_TAG" \
        --build-arg https_proxy="$HTTPS_PROXY" \
        --build-arg http_proxy="$HTTP_PROXY" \
        .
    - docker push "$IMAGE_NAME:$DOCKER_IMAGE_TAG"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DOCKER_IMAGE_TAG: "latest"
    - if: $CI_COMMIT_TAG
      variables:
        DOCKER_IMAGE_TAG: "${CI_COMMIT_TAG}"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
